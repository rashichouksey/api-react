{"version":3,"sources":["Api.js","App.js","reportWebVitals.js","index.js"],"names":["ApiUser","useState","users","setUsers","limit","setLimit","PageNo","setPageNo","nextPage","previousPage","useEffect","fetch","then","response","json","data","console","log","page","fetchUsers","className","onClick","map","user","class","height","width","src","avatar","alt","id","first_name","last_name","email","App","Api","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMAmEeA,EA/DC,WAEZ,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA4BJ,mBAAS,IAArC,mBAAOK,EAAP,KAAeC,EAAf,KAaMC,EAAW,WACbH,EAASD,EAAQ,IAGfK,EAAe,WACjBJ,EAASD,EAAQ,IASrB,OALAM,qBAAU,YAnBS,SAACN,GAEhBO,MAAM,oCAAD,OAAqCP,IACtCQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UACzBF,MAAK,SAACG,GACNC,QAAQC,IAAIF,IAAQR,EAAUQ,EAAKG,OAASf,EAASY,EAAKA,SAe/DI,CAAWf,KACZ,CAACA,IAGI,sBAAKgB,UAAU,YAAf,UACJ,uCAAUd,KACV,sBAAKc,UAAU,OAAf,UACI,wBAAQA,UAAU,kBAAkBC,QAASb,EAA7C,6BAEA,wBAAQY,UAAU,kBAAkBC,QAASZ,EAA7C,4BAGJ,8BAEQP,EAAMoB,KAAI,SAAAC,GAAI,OACV,sBAAKC,MAAM,uBAAX,UACG,qBAAKJ,UAAU,2BAA2BK,OAAO,QAAQC,MAAM,QAAQC,IAAKJ,EAAKK,OAAQC,IAAI,mBAC7F,sBAAKT,UAAU,YAAf,UACE,oBAAGA,UAAU,YAAb,iBAA8BG,EAAKO,MACnC,qBAAIV,UAAU,aAAd,mBAAkCG,EAAKQ,WAAvC,IAAoDR,EAAKS,aAEzD,oBAAGZ,UAAU,YAAb,oBAAiCG,EAAKU,oBAOvD,sBAAKb,UAAU,OAAf,UACI,wBAAQA,UAAU,kBAAkBC,QAASb,EAA7C,6BAEA,wBAAQY,UAAU,kBAAkBC,QAASZ,EAA7C,gCCnDGyB,MARf,WACE,OACE,qBAAKd,UAAU,MAAf,SACE,cAACe,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.b28de2b6.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\n\r\n\r\nconst ApiUser = () => {\r\n\r\n    const [users, setUsers] = useState([]);\r\n    const [limit, setLimit] = useState(1);\r\n    const [PageNo, setPageNo] = useState('');\r\n\r\n\r\n    const fetchUsers = (limit) => {\r\n        // Make sure you send 'limit' and 'skip' as query parameters to your node.js server\r\n        fetch(`https://reqres.in/api/users?page=${limit}`) \r\n           .then(response => response.json())\r\n            .then((data) => {\r\n             console.log(data) ||setPageNo(data.page) || setUsers(data.data)\r\n            })\r\n    }\r\n   \r\n\r\n    const nextPage = () => {\r\n        setLimit(limit - 1)\r\n    }\r\n\r\n    const previousPage = () => {\r\n        setLimit(limit + 1)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        fetchUsers(limit)\r\n    }, [limit])\r\n\r\n\r\n    return (<div className=\"container\"> \r\n        <h3>Page-{PageNo}</h3>\r\n        <div className=\"mb-5\"> \r\n            <button className=\"btn btn-primary\" onClick={nextPage}> Previous Page </button>\r\n\r\n            <button className=\"btn btn-success\" onClick={previousPage}> Next Page </button> \r\n        </div>\r\n\r\n        <div> \r\n            { \r\n                users.map(user => \r\n                    <div class=\"card App text-center\" >\r\n                       <img className=\"card-img-top image-fluid\" height=\"250px\" width=\"250px\" src={user.avatar} alt=\"Card image cap\"/>\r\n                       <div className=\"card-body\">\r\n                         <p className=\"card-text\">ID: {user.id}</p>\r\n                         <h5 className=\"card-title\">Name: {user.first_name} {user.last_name}</h5>\r\n                         \r\n                         <p className=\"card-text\">Email: {user.email}</p>\r\n                        \r\n                       </div>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n        <div className=\"mb-5\"> \r\n            <button className=\"btn btn-primary\" onClick={nextPage}> Previous Page </button>\r\n\r\n            <button className=\"btn btn-success\" onClick={previousPage}> Next Page </button> \r\n        </div>\r\n    </div>)\r\n}\r\n\r\nexport default ApiUser;","import './App.css';\nimport ApiUser from './Api'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ApiUser/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}